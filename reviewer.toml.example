# Example configuration for the Intelligent Code Review Agent.
# Copy this file to `reviewer.toml` and customize it for your project.
# Values here can be overridden by environment variables (prefixed with `REVIEWER_`)
# and by CLI flags. Precedence: CLI flags > env vars > this file.

# --- Paths Configuration ---
# Optional path to a pre-built vector index for Retrieval-Augmented Generation.
# If provided, the engine will load this index at startup.
index-path = ".reviewer/index/index.json"

# Minimum issue severity that triggers a non-zero exit code.
# Defaults to "low" if omitted.
fail-on = "low"

[paths]
# Paths to include (allow) in the analysis. Globs are supported.
allow = ["src/**/*.rs", "crates/**/*.rs"]

# Paths to exclude (deny) from the analysis.
deny = ["target/*", "**/testdata/*"]


# --- LLM Provider Configuration ---
[llm]
# The provider to use. Supported: "openai", "anthropic", "deepseek", "null".
# "null" uses a dummy provider for offline/testing mode.
provider = "null"

# The specific model to use for analysis (e.g., "gpt-4-turbo", "claude-3-opus-20240229").
model = "gpt-4-turbo"

# API key for the selected provider. Required for non-null providers.
# api_key = "YOUR_API_KEY"

# Optional: override the base URL if using a proxy or self-hosted endpoint.
# base_url = "https://api.openai.com/v1/chat/completions"


# --- Budget Configuration ---
[budget.tokens]
# Maximum tokens available per run (optional).
# max-per-run = 100000


# --- Generation Settings ---
[generation]
# Controls generation behaviour such as temperature.
temperature = 0.2


# --- Privacy Settings ---
[privacy.redaction]
# Enable redaction of sensitive content from prompts and logs.
enabled = true
# Regular expression patterns to redact.
patterns = []


# --- Rule and Scanner Configuration ---
[rules.secrets]
enabled = true
severity = "medium"

# Detects unsafe SQL query construction in Go code.
[rules.sql-injection-go]
enabled = true
severity = "medium"

# Flags HTTP requests lacking explicit timeouts in Go.
[rules.http-timeouts-go]
enabled = true
severity = "medium"

[rules.convention-deviation]
enabled = true
severity = "medium"

[rules.server-xss-go]
enabled = true
severity = "medium"


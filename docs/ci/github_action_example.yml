# Example GitHub Actions workflow for the Intelligent Code Review Agent
name: Code Review

on:
  pull_request:
    branches: [ main ]

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch the base branch for diffing
        fetch-depth: 0

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Set up cache for Cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Run tests
      run: cargo test --all

    - name: Build the CLI
      run: cargo build --release

    - name: Run code review
      id: code-review
      run: |
        # Use the PR's base branch as the diff target
        BASE_BRANCH="origin/${{ github.base_ref }}"
        ./target/release/reviewer-cli check --diff $BASE_BRANCH --output review_report.md
      # Continue even if the check fails, so we can upload the report
      continue-on-error: true

    - name: Upload review report
      uses: actions/upload-artifact@v4
      with:
        name: review-report
        path: review_report.md

    - name: Check for review issues
      if: steps.code-review.outcome == 'failure'
      run: |
        echo "Code review found issues. See the 'review-report' artifact for details."
        exit 1
